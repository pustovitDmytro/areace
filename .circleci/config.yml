defaults: &defaults
  resource_class: small
  docker:
    - image: circleci/node:16.4.2
cache-defaults: &cache-defaults
  keys:
    - -{{ checksum "package-lock.json" }}

parameters:
  skip-coveralls:
    type: boolean
    default: false
  skip-security:
    type: boolean
    default: false
  skip-leaks:
    type: boolean
    default: false
  skip-deploy:
    type: boolean
    default: false

aliases:
  - &set-github-read-token
    name: Set Danger Token
    command: |
            echo 'export DANGER_GITHUB_API_TOKEN=$(echo Z2hwXzFldFVxODNZTUhCa0ZQUjk0WVV1blFXZTFCVmkzajRSOEpxRQo= | base64 --decode)' >> $BASH_ENV
            source $BASH_ENV
  - &danger-pr
    name: Run danger
    command: npx danger ci -d .dangerfile.js
  - &coveralls
    name: Upload to coveralls
    command: npm run coveralls
  - &coverage
    name: Test Coverage
    command: npm run test:coverage -- --reporter mocha-junit-reporter --reporter-options mochaFile=reports/test-results/mocha/test-results.xml
  - &lint-js
    name: JavaScript Linter
    command: npm run lint:js -- --format junit --output-file ./reports/test-results/eslint/eslint.xml
  - &build-firefox
    name: Build Firefox
    command: npm run build:firefox
  - &debt
    name: Technical Debt
    command: npm run test:debt
  - &security
    name: Validate dependencies
    command: npm run test:security
  - &security-all
    name: Validate dev-dependencies
    command: npm audit
  - &install
    name: Installing Dependencies
    command: npm ci
  - &cache-modules
    key: -{{ checksum "package-lock.json" }}
    paths:
      - ~/.npm
      - node_modules

version: 2.1
debug: true
jobs:
  danger-pr:
    <<: *defaults
    steps:
      - checkout
      - run: *install
      - run: *set-github-read-token
      - run: *danger-pr
      
  install:
    <<: *defaults
    steps:
      - checkout
      - run: *install
      - run: *danger-pr
      - save_cache: *cache-modules
  test-security:
    <<: *defaults
    steps:
      - checkout
      - when:
          condition:
            not: << pipeline.parameters.skip-security >>
          steps:
            - restore_cache:
                <<: *cache-defaults
            - run: *security
            - run: *security-all
  test-coverage:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *cache-defaults
      - run: *coverage
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - when:
          condition:
            not: << pipeline.parameters.skip-coveralls >>
          steps:
            - run: *coveralls
  test-lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *cache-defaults
      - run: *lint-js
      - run: *build-firefox
      - run: 
          name: Lint Firefox build
          command: npm run lint:firefox
      - store_test_results:
          path: reports
  test-leaks:
    resource_class: small
    docker:
      - image: zricethezav/gitleaks:v7.6.1
    steps:
      - checkout
      - when:
          condition:
            not: << pipeline.parameters.skip-leaks >>
          steps:
            - run:
                name: Run gitleaks
                command: "gitleaks -v --path . --config-path .gitleaks.toml"
  test-debt:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *cache-defaults
      - run: *debt
      - store_artifacts:
          path: reports
  deploy:
    <<: *defaults
    steps:
      - checkout
      - when:
          condition:
            not: << pipeline.parameters.skip-deploy >>
          steps:
            - restore_cache:
                <<: *cache-defaults
            - run:
                name: Install
                command: npm i
            - run:
                name: Create Release
                command: if [ -z ${CIRCLE_SKIP_DEPLOY+x} ]; then npm run semantic-release;else echo 'job skipped';fi

workflows:
  version: 2
  main:
    jobs:
      - install:
          context: branches
      - test-leaks:
          requires:
            - install
      - deploy:
          context: npm-packages
          filters:
            branches:
                only: master
  pr:
    jobs:
      - danger-pr:
          filters:
            branches:
              only: /pull\/[0-9]+/
